var documenterSearchIndex = {"docs":
[{"location":"problems/","page":"Problems","title":"Problems","text":"CurrentModule = Pidoh\nDocTestSetup = quote\n    using Pidoh\nend","category":"page"},{"location":"problems/#Problems","page":"Problems","title":"Problems","text":"","category":"section"},{"location":"problems/","page":"Problems","title":"Problems","text":"","category":"page"},{"location":"problems/","page":"Problems","title":"Problems","text":"Here, you can see the built-in problems.","category":"page"},{"location":"problems/#BitString-Problems","page":"Problems","title":"BitString Problems","text":"","category":"section"},{"location":"problems/","page":"Problems","title":"Problems","text":"note: Note\nThe fitness functions for BitString problems just accept BitArray or Array{Bool,1} as the types of solution instances. However, it is recommended to use BitArray instead of Array{Bool,1} since BitArray uses memory more efficiently. Nevertheless, solution instances with type Array{Bool,1} are changed to BitArray automatically.","category":"page"},{"location":"problems/","page":"Problems","title":"Problems","text":"\nOneMax","category":"page"},{"location":"problems/#Pidoh.OneMax","page":"Problems","title":"Pidoh.OneMax","text":"OneMax\n\nFitness function for binary strings.\n\nExamples\n\nConsider the following example:\n\njulia> problem = OneMax(4)\nOneMax(4)\n\njulia> fitness(BitArray([true,true,false,true]), problem)\n3\n\njulia> optimum(problem)\n4\n\n\n\n\n\n\n","category":"type"},{"location":"instances/","page":"Solution instances","title":"Solution instances","text":"CurrentModule = Pidoh\nDocTestSetup = quote\n    using Pidoh\nend","category":"page"},{"location":"instances/#Solution-Instances","page":"Solution instances","title":"Solution Instances","text":"","category":"section"},{"location":"instances/","page":"Solution instances","title":"Solution instances","text":"","category":"page"},{"location":"instances/","page":"Solution instances","title":"Solution instances","text":"\nInstance","category":"page"},{"location":"instances/#Pidoh.Instance","page":"Solution instances","title":"Pidoh.Instance","text":"Instance\n\nSolution instance\n\nExamples\n\nConsider the following example:\n\njulia> x = Instance(BitArray([true,true,false,true]), OneMax(4));\n\njulia> fitness(x)\n3\n\njulia> optimum(x)\n4\n\n\n\n\n\n\n","category":"type"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Pidoh","category":"page"},{"location":"#Pidoh","page":"Home","title":"Pidoh","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Profiling Iterative Discrete Optimization Heuristics","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"problems.md\",\n    \"instances.md\"\n]\nDepth = 2","category":"page"}]
}
